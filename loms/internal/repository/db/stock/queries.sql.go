// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: queries.sql

package stock

import (
	"context"
)

type AddStocksParams struct {
	Sku           int32
	TotalCount    int32
	ReservedCount int32
}

const cancelReservationOfItem = `-- name: CancelReservationOfItem :exec
update stock
set reserved_count=reserved_count-$1
where sku=$2
`

type CancelReservationOfItemParams struct {
	ReservedCount int32
	Sku           int32
}

func (q *Queries) CancelReservationOfItem(ctx context.Context, arg CancelReservationOfItemParams) error {
	_, err := q.db.Exec(ctx, cancelReservationOfItem, arg.ReservedCount, arg.Sku)
	return err
}

const getBySku = `-- name: GetBySku :one
select sku, total_count, reserved_count from stock
where sku=$1
`

func (q *Queries) GetBySku(ctx context.Context, sku int32) (Stock, error) {
	row := q.db.QueryRow(ctx, getBySku, sku)
	var i Stock
	err := row.Scan(&i.Sku, &i.TotalCount, &i.ReservedCount)
	return i, err
}

const removeReservationOfItem = `-- name: RemoveReservationOfItem :exec
update stock
set reserved_count=reserved_count-$1,
    total_count=total_count-$1
where sku=$2
`

type RemoveReservationOfItemParams struct {
	ReservedCount int32
	Sku           int32
}

func (q *Queries) RemoveReservationOfItem(ctx context.Context, arg RemoveReservationOfItemParams) error {
	_, err := q.db.Exec(ctx, removeReservationOfItem, arg.ReservedCount, arg.Sku)
	return err
}

const reserveItems = `-- name: ReserveItems :exec
update stock
set reserved_count=reserved_count+$1
where sku=$2
`

type ReserveItemsParams struct {
	ReservedCount int32
	Sku           int32
}

func (q *Queries) ReserveItems(ctx context.Context, arg ReserveItemsParams) error {
	_, err := q.db.Exec(ctx, reserveItems, arg.ReservedCount, arg.Sku)
	return err
}
